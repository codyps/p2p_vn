= Design =

== General ==

This document is formatted in asciidoc. http://www.methods.co.nz/asciidoc/userguide.html

=== manpages ===

things like `fopen(3)` indicate that there is a man page called fopen in
section 3. It could be accessed, for example, by `man 3 fopen`. Alternately,
if no other man page in a lower section exsists, `man fopen` would have the
same result

== Program Flow ==

.data structures
 - something to contain outstanding probe requests.
 - a thread safe queue, single producer/single consumer (`I')
 - a thread safe queue, multiple producer/single consumer (partial `o')
 - thread safe routing data `r' which allows the choosing of some `o'
   (also included in the routing data). Initially, only a mac address
   is needed. Updaters: input thread, listener thread.


listener threads::
	- Given a specification for a place to listen, a list of peers `p' and
	  the routing data `r'.
	- `r' is used to populate the new 'out_thread'.
	- XXX: should `r' be updated to reflect the connection of the new peer?
	       Or should 'in_thread' do this for us? (this would require
	       'in_thread' to have a reference to `r')
	- On connect, spawns a new 'out_thread',
	  'route_thread', and 'in_thread' *in that order*.

input threads::
	Given a input device `idev' to read from and a queue(`I') to put stuff on.
	code may be input device specific. 

routing threads::
	Given a queue(`I') and routing data `r'

output threads::
	Given a queue(`O') and an output device `odev' of some type.
	Code may be output device specific.

link state thread::
	alternates between sleeping and sending out links state on all `o'

Problem: outputs and inputs that refer to ourselves (the `tun' device(s)) may
need to behave specially. 


.Problems
 - handling disconnects gracefully:
 	`r', `I', `O', 'route', 'in', and 'out' all need to be gotten rid of
	or updated.
	Generally, 'in' or 'out' will find out about the failure and need to
	inform the other two (either ['in' and 'route'] or ['out' and
	'route']). 
	
	- if 'in' knows first | second:
		get rid of `idev', inform 'route' and 'out'.
		die.
	- if 'out' knows first | second:
		get rid of `odev', inform 'route' and 'in'.
		die.
	- when 'route' knows (second):
		wait for everyone to know.
		get rid of our reference in `r' / peer list, and `O'.
		get rid of `I'

== TCP transport protocol ==

All packets header::
 - 2 byte type
 - 2 byte length

Data::
 - max 2048 bytes raw data

Part / Join::
 - 
